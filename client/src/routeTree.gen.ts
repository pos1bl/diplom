/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as DefaultRouteImport } from './routes/_default/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexImport } from './routes/index'
import { Route as DefaultSupportRouteImport } from './routes/_default/support/route'
import { Route as DefaultPaymentSuccessRouteImport } from './routes/_default/payment-success/route'
import { Route as DefaultHomepageRouteImport } from './routes/_default/homepage/route'
import { Route as DefaultGiftsRouteImport } from './routes/_default/gifts/route'
import { Route as DefaultFormRouteImport } from './routes/_default/form/route'
import { Route as DefaultCareerRouteImport } from './routes/_default/career/route'
import { Route as AuthenticatedUserRouteImport } from './routes/_authenticated/user/route'
import { Route as AuthenticatedSpecialistRouteImport } from './routes/_authenticated/specialist/route'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedUserIndexImport } from './routes/_authenticated/user/index'
import { Route as AuthenticatedAdminIndexImport } from './routes/_authenticated/admin/index'
import { Route as AuthenticatedUserSupportRouteImport } from './routes/_authenticated/user/support/route'
import { Route as AuthenticatedUserSpecialistsRouteImport } from './routes/_authenticated/user/specialists/route'
import { Route as AuthenticatedUserSettingsRouteImport } from './routes/_authenticated/user/settings/route'
import { Route as AuthenticatedUserAppointmentsRouteImport } from './routes/_authenticated/user/appointments/route'
import { Route as AuthenticatedAdminAddSpecialistRouteImport } from './routes/_authenticated/admin/add-specialist/route'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const DefaultRouteRoute = DefaultRouteImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DefaultSupportRouteRoute = DefaultSupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => DefaultRouteRoute,
} as any)

const DefaultPaymentSuccessRouteRoute = DefaultPaymentSuccessRouteImport.update(
  {
    id: '/payment-success',
    path: '/payment-success',
    getParentRoute: () => DefaultRouteRoute,
  } as any,
)

const DefaultHomepageRouteRoute = DefaultHomepageRouteImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => DefaultRouteRoute,
} as any)

const DefaultGiftsRouteRoute = DefaultGiftsRouteImport.update({
  id: '/gifts',
  path: '/gifts',
  getParentRoute: () => DefaultRouteRoute,
} as any)

const DefaultFormRouteRoute = DefaultFormRouteImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => DefaultRouteRoute,
} as any)

const DefaultCareerRouteRoute = DefaultCareerRouteImport.update({
  id: '/career',
  path: '/career',
  getParentRoute: () => DefaultRouteRoute,
} as any)

const AuthenticatedUserRouteRoute = AuthenticatedUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSpecialistRouteRoute =
  AuthenticatedSpecialistRouteImport.update({
    id: '/specialist',
    path: '/specialist',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedUserIndexRoute = AuthenticatedUserIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedUserRouteRoute,
} as any)

const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)

const AuthenticatedUserSupportRouteRoute =
  AuthenticatedUserSupportRouteImport.update({
    id: '/support',
    path: '/support',
    getParentRoute: () => AuthenticatedUserRouteRoute,
  } as any)

const AuthenticatedUserSpecialistsRouteRoute =
  AuthenticatedUserSpecialistsRouteImport.update({
    id: '/specialists',
    path: '/specialists',
    getParentRoute: () => AuthenticatedUserRouteRoute,
  } as any)

const AuthenticatedUserSettingsRouteRoute =
  AuthenticatedUserSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedUserRouteRoute,
  } as any)

const AuthenticatedUserAppointmentsRouteRoute =
  AuthenticatedUserAppointmentsRouteImport.update({
    id: '/appointments',
    path: '/appointments',
    getParentRoute: () => AuthenticatedUserRouteRoute,
  } as any)

const AuthenticatedAdminAddSpecialistRouteRoute =
  AuthenticatedAdminAddSpecialistRouteImport.update({
    id: '/add-specialist',
    path: '/add-specialist',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/specialist': {
      id: '/_authenticated/specialist'
      path: '/specialist'
      fullPath: '/specialist'
      preLoaderRoute: typeof AuthenticatedSpecialistRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/user': {
      id: '/_authenticated/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthenticatedUserRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_default/career': {
      id: '/_default/career'
      path: '/career'
      fullPath: '/career'
      preLoaderRoute: typeof DefaultCareerRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_default/form': {
      id: '/_default/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof DefaultFormRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_default/gifts': {
      id: '/_default/gifts'
      path: '/gifts'
      fullPath: '/gifts'
      preLoaderRoute: typeof DefaultGiftsRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_default/homepage': {
      id: '/_default/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof DefaultHomepageRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_default/payment-success': {
      id: '/_default/payment-success'
      path: '/payment-success'
      fullPath: '/payment-success'
      preLoaderRoute: typeof DefaultPaymentSuccessRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_default/support': {
      id: '/_default/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof DefaultSupportRouteImport
      parentRoute: typeof DefaultRouteImport
    }
    '/_authenticated/admin/add-specialist': {
      id: '/_authenticated/admin/add-specialist'
      path: '/add-specialist'
      fullPath: '/admin/add-specialist'
      preLoaderRoute: typeof AuthenticatedAdminAddSpecialistRouteImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/user/appointments': {
      id: '/_authenticated/user/appointments'
      path: '/appointments'
      fullPath: '/user/appointments'
      preLoaderRoute: typeof AuthenticatedUserAppointmentsRouteImport
      parentRoute: typeof AuthenticatedUserRouteImport
    }
    '/_authenticated/user/settings': {
      id: '/_authenticated/user/settings'
      path: '/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthenticatedUserSettingsRouteImport
      parentRoute: typeof AuthenticatedUserRouteImport
    }
    '/_authenticated/user/specialists': {
      id: '/_authenticated/user/specialists'
      path: '/specialists'
      fullPath: '/user/specialists'
      preLoaderRoute: typeof AuthenticatedUserSpecialistsRouteImport
      parentRoute: typeof AuthenticatedUserRouteImport
    }
    '/_authenticated/user/support': {
      id: '/_authenticated/user/support'
      path: '/support'
      fullPath: '/user/support'
      preLoaderRoute: typeof AuthenticatedUserSupportRouteImport
      parentRoute: typeof AuthenticatedUserRouteImport
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexImport
      parentRoute: typeof AuthenticatedAdminRouteImport
    }
    '/_authenticated/user/': {
      id: '/_authenticated/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof AuthenticatedUserIndexImport
      parentRoute: typeof AuthenticatedUserRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminAddSpecialistRouteRoute: typeof AuthenticatedAdminAddSpecialistRouteRoute
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminAddSpecialistRouteRoute:
      AuthenticatedAdminAddSpecialistRouteRoute,
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedUserRouteRouteChildren {
  AuthenticatedUserAppointmentsRouteRoute: typeof AuthenticatedUserAppointmentsRouteRoute
  AuthenticatedUserSettingsRouteRoute: typeof AuthenticatedUserSettingsRouteRoute
  AuthenticatedUserSpecialistsRouteRoute: typeof AuthenticatedUserSpecialistsRouteRoute
  AuthenticatedUserSupportRouteRoute: typeof AuthenticatedUserSupportRouteRoute
  AuthenticatedUserIndexRoute: typeof AuthenticatedUserIndexRoute
}

const AuthenticatedUserRouteRouteChildren: AuthenticatedUserRouteRouteChildren =
  {
    AuthenticatedUserAppointmentsRouteRoute:
      AuthenticatedUserAppointmentsRouteRoute,
    AuthenticatedUserSettingsRouteRoute: AuthenticatedUserSettingsRouteRoute,
    AuthenticatedUserSpecialistsRouteRoute:
      AuthenticatedUserSpecialistsRouteRoute,
    AuthenticatedUserSupportRouteRoute: AuthenticatedUserSupportRouteRoute,
    AuthenticatedUserIndexRoute: AuthenticatedUserIndexRoute,
  }

const AuthenticatedUserRouteRouteWithChildren =
  AuthenticatedUserRouteRoute._addFileChildren(
    AuthenticatedUserRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  AuthenticatedSpecialistRouteRoute: typeof AuthenticatedSpecialistRouteRoute
  AuthenticatedUserRouteRoute: typeof AuthenticatedUserRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  AuthenticatedSpecialistRouteRoute: AuthenticatedSpecialistRouteRoute,
  AuthenticatedUserRouteRoute: AuthenticatedUserRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface DefaultRouteRouteChildren {
  DefaultCareerRouteRoute: typeof DefaultCareerRouteRoute
  DefaultFormRouteRoute: typeof DefaultFormRouteRoute
  DefaultGiftsRouteRoute: typeof DefaultGiftsRouteRoute
  DefaultHomepageRouteRoute: typeof DefaultHomepageRouteRoute
  DefaultPaymentSuccessRouteRoute: typeof DefaultPaymentSuccessRouteRoute
  DefaultSupportRouteRoute: typeof DefaultSupportRouteRoute
}

const DefaultRouteRouteChildren: DefaultRouteRouteChildren = {
  DefaultCareerRouteRoute: DefaultCareerRouteRoute,
  DefaultFormRouteRoute: DefaultFormRouteRoute,
  DefaultGiftsRouteRoute: DefaultGiftsRouteRoute,
  DefaultHomepageRouteRoute: DefaultHomepageRouteRoute,
  DefaultPaymentSuccessRouteRoute: DefaultPaymentSuccessRouteRoute,
  DefaultSupportRouteRoute: DefaultSupportRouteRoute,
}

const DefaultRouteRouteWithChildren = DefaultRouteRoute._addFileChildren(
  DefaultRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DefaultRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/specialist': typeof AuthenticatedSpecialistRouteRoute
  '/user': typeof AuthenticatedUserRouteRouteWithChildren
  '/career': typeof DefaultCareerRouteRoute
  '/form': typeof DefaultFormRouteRoute
  '/gifts': typeof DefaultGiftsRouteRoute
  '/homepage': typeof DefaultHomepageRouteRoute
  '/payment-success': typeof DefaultPaymentSuccessRouteRoute
  '/support': typeof DefaultSupportRouteRoute
  '/admin/add-specialist': typeof AuthenticatedAdminAddSpecialistRouteRoute
  '/user/appointments': typeof AuthenticatedUserAppointmentsRouteRoute
  '/user/settings': typeof AuthenticatedUserSettingsRouteRoute
  '/user/specialists': typeof AuthenticatedUserSpecialistsRouteRoute
  '/user/support': typeof AuthenticatedUserSupportRouteRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/user/': typeof AuthenticatedUserIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DefaultRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/specialist': typeof AuthenticatedSpecialistRouteRoute
  '/career': typeof DefaultCareerRouteRoute
  '/form': typeof DefaultFormRouteRoute
  '/gifts': typeof DefaultGiftsRouteRoute
  '/homepage': typeof DefaultHomepageRouteRoute
  '/payment-success': typeof DefaultPaymentSuccessRouteRoute
  '/support': typeof DefaultSupportRouteRoute
  '/admin/add-specialist': typeof AuthenticatedAdminAddSpecialistRouteRoute
  '/user/appointments': typeof AuthenticatedUserAppointmentsRouteRoute
  '/user/settings': typeof AuthenticatedUserSettingsRouteRoute
  '/user/specialists': typeof AuthenticatedUserSpecialistsRouteRoute
  '/user/support': typeof AuthenticatedUserSupportRouteRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/user': typeof AuthenticatedUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_default': typeof DefaultRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_authenticated/specialist': typeof AuthenticatedSpecialistRouteRoute
  '/_authenticated/user': typeof AuthenticatedUserRouteRouteWithChildren
  '/_default/career': typeof DefaultCareerRouteRoute
  '/_default/form': typeof DefaultFormRouteRoute
  '/_default/gifts': typeof DefaultGiftsRouteRoute
  '/_default/homepage': typeof DefaultHomepageRouteRoute
  '/_default/payment-success': typeof DefaultPaymentSuccessRouteRoute
  '/_default/support': typeof DefaultSupportRouteRoute
  '/_authenticated/admin/add-specialist': typeof AuthenticatedAdminAddSpecialistRouteRoute
  '/_authenticated/user/appointments': typeof AuthenticatedUserAppointmentsRouteRoute
  '/_authenticated/user/settings': typeof AuthenticatedUserSettingsRouteRoute
  '/_authenticated/user/specialists': typeof AuthenticatedUserSpecialistsRouteRoute
  '/_authenticated/user/support': typeof AuthenticatedUserSupportRouteRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/user/': typeof AuthenticatedUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/admin'
    | '/specialist'
    | '/user'
    | '/career'
    | '/form'
    | '/gifts'
    | '/homepage'
    | '/payment-success'
    | '/support'
    | '/admin/add-specialist'
    | '/user/appointments'
    | '/user/settings'
    | '/user/specialists'
    | '/user/support'
    | '/admin/'
    | '/user/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/specialist'
    | '/career'
    | '/form'
    | '/gifts'
    | '/homepage'
    | '/payment-success'
    | '/support'
    | '/admin/add-specialist'
    | '/user/appointments'
    | '/user/settings'
    | '/user/specialists'
    | '/user/support'
    | '/admin'
    | '/user'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_default'
    | '/sign-in'
    | '/_authenticated/admin'
    | '/_authenticated/specialist'
    | '/_authenticated/user'
    | '/_default/career'
    | '/_default/form'
    | '/_default/gifts'
    | '/_default/homepage'
    | '/_default/payment-success'
    | '/_default/support'
    | '/_authenticated/admin/add-specialist'
    | '/_authenticated/user/appointments'
    | '/_authenticated/user/settings'
    | '/_authenticated/user/specialists'
    | '/_authenticated/user/support'
    | '/_authenticated/admin/'
    | '/_authenticated/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  DefaultRouteRoute: typeof DefaultRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  DefaultRouteRoute: DefaultRouteRouteWithChildren,
  SignInRoute: SignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_default",
        "/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/specialist",
        "/_authenticated/user"
      ]
    },
    "/_default": {
      "filePath": "_default/route.tsx",
      "children": [
        "/_default/career",
        "/_default/form",
        "/_default/gifts",
        "/_default/homepage",
        "/_default/payment-success",
        "/_default/support"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/add-specialist",
        "/_authenticated/admin/"
      ]
    },
    "/_authenticated/specialist": {
      "filePath": "_authenticated/specialist/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user": {
      "filePath": "_authenticated/user/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/user/appointments",
        "/_authenticated/user/settings",
        "/_authenticated/user/specialists",
        "/_authenticated/user/support",
        "/_authenticated/user/"
      ]
    },
    "/_default/career": {
      "filePath": "_default/career/route.tsx",
      "parent": "/_default"
    },
    "/_default/form": {
      "filePath": "_default/form/route.tsx",
      "parent": "/_default"
    },
    "/_default/gifts": {
      "filePath": "_default/gifts/route.tsx",
      "parent": "/_default"
    },
    "/_default/homepage": {
      "filePath": "_default/homepage/route.tsx",
      "parent": "/_default"
    },
    "/_default/payment-success": {
      "filePath": "_default/payment-success/route.tsx",
      "parent": "/_default"
    },
    "/_default/support": {
      "filePath": "_default/support/route.tsx",
      "parent": "/_default"
    },
    "/_authenticated/admin/add-specialist": {
      "filePath": "_authenticated/admin/add-specialist/route.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/user/appointments": {
      "filePath": "_authenticated/user/appointments/route.tsx",
      "parent": "/_authenticated/user"
    },
    "/_authenticated/user/settings": {
      "filePath": "_authenticated/user/settings/route.tsx",
      "parent": "/_authenticated/user"
    },
    "/_authenticated/user/specialists": {
      "filePath": "_authenticated/user/specialists/route.tsx",
      "parent": "/_authenticated/user"
    },
    "/_authenticated/user/support": {
      "filePath": "_authenticated/user/support/route.tsx",
      "parent": "/_authenticated/user"
    },
    "/_authenticated/admin/": {
      "filePath": "_authenticated/admin/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/user/": {
      "filePath": "_authenticated/user/index.tsx",
      "parent": "/_authenticated/user"
    }
  }
}
ROUTE_MANIFEST_END */
